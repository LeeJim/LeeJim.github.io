import{_ as o,o as t,c as l,k as e,a as i,t as r,S as c}from"./chunks/framework.7f03344f.js";const g=JSON.parse('{"title":"什么是 cookie","description":"","frontmatter":{"title":"什么是 cookie","date":"2017-11-05T18:43:13.000Z","tags":"cookie","desc":"什么是cookie","toc":true,"categories":["计算机网络"]},"headers":[],"relativePath":"fe-base/cookie.md","filePath":"fe-base/cookie.md","lastUpdated":null}'),s={name:"fe-base/cookie.md"},n={id:"frontmatter-title",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=c('<p>起源，因为HTTP的无状态，无法知道两个请求是来自同个人。</p><p>由NetScape工程师Lou Montulli与1994发表。正式确定于<a href="http://tools.ietf.org/html/rfc2109" target="_blank" rel="noreferrer">RFC2109</a>，最终演变成<a href="http://tools.ietf.org/html/rfc2965" target="_blank" rel="noreferrer">RFC2965</a></p><h2 id="cookie为何物" tabindex="-1">Cookie为何物？ <a class="header-anchor" href="#cookie为何物" aria-label="Permalink to &quot;Cookie为何物？&quot;">​</a></h2><p>简单说，就是一个简单的纯文本。服务器可根据这个文本来区别每个独立的用户。因此，cookie经常被应用于登录和信息校验。</p><h3 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h3><p>服务器通过<code>Set-Cookie</code>的HTTP头来设置：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set-Cookie: &lt;em&gt;value&lt;/em&gt;[; expires=&lt;em&gt;date&lt;/em&gt;][; domain=&lt;em&gt;domain&lt;/em&gt;][; path=&lt;em&gt;path&lt;/em&gt;][; secure]</span></span></code></pre></div><p>客户端将多个cookie通过<code>Cookie</code>的HTTP头来返回服务器：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cookie: value1; value2; name1=value1</span></span></code></pre></div><blockquote><p>多个value直接由一个分号和一个空格分隔开</p></blockquote><h3 id="value编码" tabindex="-1">value编码 <a class="header-anchor" href="#value编码" aria-label="Permalink to &quot;value编码&quot;">​</a></h3><p>在普遍持有的观念中，value一定要是<code>URL-endcoed</code>编码的。</p><p>其实这是个谬论，在文档中，明确指出只有<code>分号、逗号、空格</code>才需要编码。</p><h3 id="expires" tabindex="-1">expires <a class="header-anchor" href="#expires" aria-label="Permalink to &quot;expires&quot;">​</a></h3><p>设置过期时间。需要使用GMT格式的时间。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set-Cookie: name=Nicholas; expires=Sat, 02 May 2009 23:38:25 GMT</span></span></code></pre></div><blockquote><p>若没设置时间，则一个会话周期（即关闭浏览器）就会自动被删除</p></blockquote><blockquote><p>校验的时间是以客户端的时间为准</p></blockquote><h3 id="domain" tabindex="-1">domain <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;domain&quot;">​</a></h3><p>指定什么域名请求时需要发送该cookie。</p><blockquote><p>采用尾校验，即子域名也会发送(domain=yahoo.com，在my.yahoo.com也会发送)</p></blockquote><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><p>指定域名下的对应路径的请求才发送cookie。</p><h3 id="secure" tabindex="-1">secure <a class="header-anchor" href="#secure" aria-label="Permalink to &quot;secure&quot;">​</a></h3><p>有这个标志，cookie只会在HTTPS协议的请求发送该cookie。</p><h2 id="维护cookie和周期" tabindex="-1">维护Cookie和周期 <a class="header-anchor" href="#维护cookie和周期" aria-label="Permalink to &quot;维护Cookie和周期&quot;">​</a></h2><p>修改对应的值，需要保持其他的值不变才能修改成功。不然就等于新增了一个cookie。</p><h3 id="自动删除" tabindex="-1">自动删除 <a class="header-anchor" href="#自动删除" aria-label="Permalink to &quot;自动删除&quot;">​</a></h3><p>以下三个原因导致cookie被浏览器自动删除：</p><ul><li>会话结束自动删除</li><li>expires到期自动删除</li><li>超过上线自动删除相对较旧的cookie</li></ul><h2 id="其他限制" tabindex="-1">其他限制 <a class="header-anchor" href="#其他限制" aria-label="Permalink to &quot;其他限制&quot;">​</a></h2><ul><li>HTTP-Only: 这个将使浏览器无法使用JavaScript访问该cookie。</li></ul><h2 id="参考" tabindex="-1">参考： <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考：&quot;">​</a></h2><ul><li><a href="https://www.nczonline.net/blog/2009/05/05/http-cookies-explained/" target="_blank" rel="noreferrer">HTTP cookies explained</a></li><li><a href="https://www.nczonline.net/blog/2009/05/12/cookies-and-security/" target="_blank" rel="noreferrer">Cookies and security</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework" target="_blank" rel="noreferrer">Simple cookie framework</a></li></ul>',34);function d(a,u,k,m,b,f){return t(),l("div",null,[e("h1",n,[i(r(a.$frontmatter.title)+" ",1),p]),h])}const q=o(s,[["render",d]]);export{g as __pageData,q as default};
