import{_ as a,o as n,c as e,k as s,a as l,t as p,S as t}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"探索CSS盒模型","description":"","frontmatter":{"title":"探索CSS盒模型","date":"2017-08-16T00:17:32.000Z","tags":["CSS","盒模型"],"desc":"css model，css盒模型，margin，padding，widht，height","toc":true,"categories":["CSS"]},"headers":[],"relativePath":"fe-base/css-box-model.md","filePath":"fe-base/css-box-model.md","lastUpdated":null}'),c={name:"fe-base/css-box-model.md"},r={id:"frontmatter-title",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),i=t(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>从w3cschool入门前端开发，到实际开发遇到问题逐个网上搜索解决。</p><p>现在开发基本遇到的基本样式(<code>CSS</code>)问题都能解决，但是发现知识是零散的，不成体系，一遇到没遇过的问题，不能很好地思考只能依靠google，这就是知识体系的不完善导致的。因此我现在从《CSS权威指南》开始逐渐构建自己的CSS知识体系，并总结一下心得。</p><h1 id="块级元素" tabindex="-1">块级元素 <a class="header-anchor" href="#块级元素" aria-label="Permalink to &quot;块级元素&quot;">​</a></h1><p>毫无疑问的，每个元素的HTML里渲染都是基于盒模型的，因此理解这个很重要。抛出一个MDN制作的盒模型的图：</p><p><img src="http://7xnh42.com1.z0.glb.clouddn.com/box-model-standard-small.png" alt=""></p><h2 id="水平格式化" tabindex="-1">水平格式化 <a class="header-anchor" href="#水平格式化" aria-label="Permalink to &quot;水平格式化&quot;">​</a></h2><p>水平方向的大小也是有些复杂，主要一个原因是<code>width</code>影响的是内容(<code>content</code>)区域的宽度，而不是整个可见的元素框。</p><p>大多数开发者以为，<code>widht</code>指的就是可见元素框的宽度，其实不是这样的(不过<code>CSS3</code>的<code>box-sizing</code>可以修改盒模型，这里暂不讨论)。</p><blockquote><p><strong>可见元素框的宽 = <code>margin-left</code> + <code>border-left</code> + <code>padding-left</code> + <code>width</code> + <code>padding-right</code> + <code>border-right</code> + <code>margin-right</code></strong></p></blockquote><p>知道这个知识点很重要，后面的内容都是以这个为基础进行延伸的。</p><blockquote><p>以上7个属性中，只有<code>margin-left</code>、<code>margin-right</code>和<code>width</code>这三个属性可以设置为auto，其他必须设置特定的值或0</p></blockquote><h3 id="使用auto" tabindex="-1">使用auto <a class="header-anchor" href="#使用auto" aria-label="Permalink to &quot;使用auto&quot;">​</a></h3><p>首先，大家都知道的一点是，块级元素的大小是横向填充的，即自己的宽度等于父元素的<code>width</code>。</p><h4 id="设置一个auto" tabindex="-1">设置一个auto <a class="header-anchor" href="#设置一个auto" aria-label="Permalink to &quot;设置一个auto&quot;">​</a></h4><p>假定父元素<code>width: 400px</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    magrin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 等于200px */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>此时<code>margin-left</code>就是弥补剩余的宽度即400-100-100=200</p><h4 id="不设置auto" tabindex="-1">不设置auto <a class="header-anchor" href="#不设置auto" aria-label="Permalink to &quot;不设置auto&quot;">​</a></h4><p>如果三个属性都设置指定的值，那么不就有这样的可能：本元素框的可见宽度不等于父元素的<code>width</code>:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  magrin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 等于200px */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>其实情况不是这样的，因为在CSS中，这些格式化属性过分受限(<code>overconstrained</code>)，因此此时的<code>margin-right</code>会被强制设置成<code>auto</code>，即<code>margin-right=200px</code>而不是我们想当然的那样等于<code>100px</code>。</p><p>(ps:在英语这种从左向右读的语言是强制设置<code>marin-right</code>，而在从右向左的语言则是强制设置<code>margin-left</code>为<code>auto</code>了)</p><h4 id="设置两个auto" tabindex="-1">设置两个auto <a class="header-anchor" href="#设置两个auto" aria-label="Permalink to &quot;设置两个auto&quot;">​</a></h4><p>首先先考虑常用的，设置两个<code>margin</code>为<code>auto</code>，此时就可以实现水平居中的效果。</p><p>如果设置其中一个<code>margin</code>和<code>width</code>为<code>auto</code>的话，<code>margin</code>的值则会减为0，而<code>widht</code>会水平延伸直至充满父元素。</p><h4 id="设置三个auto" tabindex="-1">设置三个auto <a class="header-anchor" href="#设置三个auto" aria-label="Permalink to &quot;设置三个auto&quot;">​</a></h4><p>即<code>margin-left</code>、<code>margin-right</code>和<code>widht</code>都为<code>auto</code>。此时和上面那个例子比较类似，就是<code>margin</code>都减为0，<code>width</code>则填满父元素。</p><h3 id="负的margin值" tabindex="-1">负的margin值 <a class="header-anchor" href="#负的margin值" aria-label="Permalink to &quot;负的margin值&quot;">​</a></h3><p>前面的情况都还算简单明了，但是遇到这个负的margin值，情况就渐渐复杂起来了。看下下面这个例子：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    widht</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">child</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这个时候child这个子元素的<code>widht</code>是多少呢？</p><p>根据前面提到的算法可以得到：<strong>10px + 0 + 0 + width + -50px = 400px</strong>，此时可以得到<code>width=440px</code></p><p>另外需要注意的是：<code>padding</code>、<code>border</code>和<code>width</code>都不能设置为负值。</p><h2 id="垂直格式化" tabindex="-1">垂直格式化 <a class="header-anchor" href="#垂直格式化" aria-label="Permalink to &quot;垂直格式化&quot;">​</a></h2><p>垂直方向和水平的大部分都比较类似，比如：</p><blockquote><p>可见元素的高 = margin-top + border-top + padding-top + height + padding-bottom + border-bottom + margin-bottom</p></blockquote><p>如果此时子元素的<code>height</code>大于父元素的<code>height</code>时，具体效果就要取决于<code>overflow</code>属性的值了，这里暂不讨论。</p><p>有一点不一样的是：<code>margin-top</code>和<code>margin-bottom</code>设置为<code>auto</code>的话，都会自动计算为0，因此垂直居中的效果不能这么轻易实现。</p><h3 id="设置margin-top、margin-bottom" tabindex="-1">设置margin-top、margin-bottom <a class="header-anchor" href="#设置margin-top、margin-bottom" aria-label="Permalink to &quot;设置margin-top、margin-bottom&quot;">​</a></h3><p>经常会有这么一个情况：子元素设置了<code>margin-top</code>或者<code>margin-bottom</code>，但是父元素不会撑开这部分的<code>margin</code>高度，这部分出现在父元素以外:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">background-color: silver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">margin-top: 100px; margin-bottom: 100px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>此时效果是这样的：</p><p><img src="http://7xnh42.com1.z0.glb.clouddn.com/1502812757152.jpg" alt=""></p><p>因为块级元素只有块级子元素的话，其高度是子元素的<code>border-top</code> + <code>padding-top</code> + <code>height</code> + <code>padding-bottom</code> + <code>border-bottom</code>的总和。</p><p>但是如果该块级元素有padding或者border的话，则其高度等于子元素的<code>margin-top</code> + <code>border-top</code> + <code>padding-top</code> + <code>height</code> + <code>padding-bottom</code> + <code>border-bottom</code> + <code>margin-bottom</code>总和。比如：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">background-color: silver; border: 1px solid black</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">margin-top: 100px; margin-bottom: 100px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="合并margin-top和margin-bottom" tabindex="-1">合并margin-top和margin-bottom <a class="header-anchor" href="#合并margin-top和margin-bottom" aria-label="Permalink to &quot;合并margin-top和margin-bottom&quot;">​</a></h4><p>众所周知的是，如果有上下两个元素，上元素的<code>margin-bottom</code>和下元素的<code>margin-top</code>是会合并的，大小等于这两个的最大值。</p><p>这时又有一个例外，就是如果元素含有<code>padding</code>或者<code>border</code>的话，则不会合并。</p>`,50);function D(o,F,y,C,h,g){return n(),e("div",null,[s("h1",r,[l(p(o.$frontmatter.title)+" ",1),d]),i])}const b=a(c,[["render",D]]);export{u as __pageData,b as default};
