import{_ as t,o as l,c as n,k as s,a as e,t as o,S as p}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"JavaScript 数据类型详解","description":"","frontmatter":{"title":"JavaScript 数据类型详解","date":"2020-07-27T20:04:26.000Z","tags":null,"toc":true},"headers":[],"relativePath":"fe-base/js-data-type.md","filePath":"fe-base/js-data-type.md","lastUpdated":null}'),r={name:"fe-base/js-data-type.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),d=p(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>JavaScript 是弱类型语言，在定义变量时不需要明确定义类型，刚接触是觉得非常灵活，很方便。</p><p>但随着开发走进深水区，更多的协作开发，越发觉得这种弱类型语言不受控，容易出错。</p><p>社区为了解决弱类型的问题，也有了如 Flow、TypeScript 等扩充。但为了解决问题而引入新的语法糖，只会是增加复杂度，将问题转移罢了。</p><p>因此对待问题的最好解决办法是正视它，剖析其背后原理。</p><p>本文将尝试将 JavaScript 的类型转换归纳总结，试图将日常开发遇到的问题与技巧尽可能地分享给大家。</p><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><ul><li>基础数据类型：undefined、null、Boolean、String、Number、Symbol</li><li>引用数据类型：Object</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/24/1737fee2f56647c6~tplv-t2oaga2asx-image.image" alt=""></p><blockquote><p>任何没有赋值的变量都有这个值：undefined</p></blockquote><h2 id="类型转换" tabindex="-1">类型转换 <a class="header-anchor" href="#类型转换" aria-label="Permalink to &quot;类型转换&quot;">​</a></h2><h3 id="显示类型转换-explicit-conversion" tabindex="-1">显示类型转换（explicit conversion） <a class="header-anchor" href="#显示类型转换-explicit-conversion" aria-label="Permalink to &quot;显示类型转换（explicit conversion）&quot;">​</a></h3><p>常用的数据类型有这三种：Boolean、Number、String，可以看下显示转换：</p><table><thead><tr><th></th><th>undefined</th><th>null</th><th>Boolean</th><th>Number</th><th>String</th><th>Symbol</th><th>Object</th></tr></thead><tbody><tr><td>toBoolean</td><td>false</td><td>false</td><td>/</td><td>false: -0、+0、NaN<br>true：其他</td><td>false: &#39;&#39;<br>true：其他</td><td>true</td><td>true</td></tr><tr><td>toNumber</td><td>NaN</td><td>0</td><td>1：true<br>0：false</td><td>/</td><td>（下章详解）</td><td>抛出异常TypeError</td><td>调用valueOf()</td></tr><tr><td>toString</td><td>&#39;undefined&#39;</td><td>&#39;null&#39;</td><td>&#39;true&#39;：true<br>&#39;false&#39;：false</td><td>（下章详解）</td><td>/</td><td>抛出异常TypeError</td><td>调用toString()</td></tr></tbody></table><h3 id="隐式类型转换-implicitly-conversion" tabindex="-1">隐式类型转换（implicitly conversion） <a class="header-anchor" href="#隐式类型转换-implicitly-conversion" aria-label="Permalink to &quot;隐式类型转换（implicitly conversion）&quot;">​</a></h3><p>大致有以下场景会出现隐式类型转换：</p><ul><li>条件语句（<code>if</code>、<code>else</code>、）</li><li>循环语句（<code>for</code>、<code>while</code>）</li><li>逻辑运算符：<code>!</code>、<code>&amp;&amp;</code>、<code>||</code>、<code>?:</code>三元运算符</li><li>算术运算符：<code>+</code></li><li>比较运算符：<code>==</code>、<code>&lt;</code>、<code>&gt;</code></li></ul><p>其中，条件语句和循环语句都是将类型转换成 Boolean，因此可以参考上表。其他的类型，会有特殊的类型转换规则：</p><table><thead><tr><th></th><th>Number</th><th>String</th><th>Boolean</th><th>Object</th><th>undefined</th><th>null</th><th>Symbol</th></tr></thead><tbody><tr><td>Number</td><td>===</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>String</td><td>string.toNumber()</td><td>===</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Boolean</td><td>boolean.toNumber()</td><td>boolean.toNumber()</td><td>===</td><td></td><td></td><td></td><td></td></tr><tr><td>Object</td><td>Object.toPrimitive()</td><td>Object.toPrimitive()</td><td>false</td><td>===</td><td></td><td></td><td></td></tr><tr><td>undefined</td><td>false</td><td>false</td><td>false</td><td>false</td><td>true</td><td></td><td></td></tr><tr><td>null</td><td>false</td><td>false</td><td>false</td><td>false</td><td>true</td><td>true</td><td></td></tr><tr><td>Symbol</td><td>false</td><td>false</td><td>false</td><td>Object.toPrimitive()</td><td>false</td><td>false</td><td>===</td></tr></tbody></table><h3 id="字符串转数字" tabindex="-1">字符串转数字 <a class="header-anchor" href="#字符串转数字" aria-label="Permalink to &quot;字符串转数字&quot;">​</a></h3><p>具体转换算法有些复杂，以下拿具体的方式举例。</p><p>JavaScript 提供了好几种方式：</p><ul><li><code>parseInt()</code></li><li><code>parseFloat()</code></li><li><code>Number()</code></li><li><code>Math.ceil()</code></li><li><code>Math.floor()</code></li><li>运算符：<code>+</code>或<code>*</code></li></ul><p>以下举例对比之前的差别，如整数字符串(int string)：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> intStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(intStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(intStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(intStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(intStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(intStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> intStr </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">intStr </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span></code></pre></div><p>浮点型数字字符串(float string)：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> fltStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.23</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(fltStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(fltStr) </span><span style="color:#676E95;font-style:italic;">// 1.23</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(fltStr) </span><span style="color:#676E95;font-style:italic;">// 1.23</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(fltStr) </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(fltStr) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> fltStr </span><span style="color:#676E95;font-style:italic;">// 1.23</span></span>
<span class="line"><span style="color:#A6ACCD;">fltStr </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1.23</span></span></code></pre></div><p>非数字字符串(NaN string)</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abcdefg</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> str </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span></code></pre></div><p>数字+字母 字符串(number and alpha string):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.23abcdefg</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// 1.23</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> str </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span></code></pre></div><p>字母+数字 字符串(alpha and number string)</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abcd1.23</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#A6ACCD;">(str) </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> str </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span></code></pre></div><p>除了结果直接的差异之外，性能也有些差异，在<a href="https://flaviocopes.com/how-to-convert-string-to-number-javascript/" target="_blank" rel="noreferrer">《how-to-convert-string-to-number-javascript》</a>文章有相关的性能对比，有兴趣的可以看一下。这里我直接贴个结果图：</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/27/1738f4e0446f03b9~tplv-t2oaga2asx-image.image" alt=""></p><h3 id="数字转字符串" tabindex="-1">数字转字符串 <a class="header-anchor" href="#数字转字符串" aria-label="Permalink to &quot;数字转字符串&quot;">​</a></h3><p>相对比较复杂，可以参考 ecma262 的<a href="https://tc39.es/ecma262/#sec-numeric-types-number-tostring" target="_blank" rel="noreferrer">文档</a></p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/24/1737fe0f5d595809~tplv-t2oaga2asx-image.image" alt=""></p><p>。。。持续更新</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://github.com/amandakelake/blog/issues/34" target="_blank" rel="noreferrer">深入理解JS的类型、值、类型转换</a></li><li><a href="https://stackabuse.com/javascript-convert-string-to-number/" target="_blank" rel="noreferrer">JavaScript Convert String to Number</a></li><li><a href="https://gomakethings.com/converting-strings-to-numbers-with-vanilla-javascript/" target="_blank" rel="noreferrer">Converting strings to numbers with vanilla JavaScript</a></li><li><a href="https://flaviocopes.com/how-to-convert-string-to-number-javascript/" target="_blank" rel="noreferrer">How to convert a string to a number in JavaScript</a></li></ul>`,41);function y(a,A,C,D,h,F){return l(),n("div",null,[s("h1",c,[e(o(a.$frontmatter.title)+" ",1),i]),d])}const b=t(r,[["render",y]]);export{u as __pageData,b as default};
