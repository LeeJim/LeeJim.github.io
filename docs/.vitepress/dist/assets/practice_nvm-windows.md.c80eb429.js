import{_ as e,o as n,c as o,k as s,a as t,t as l,S as p}from"./chunks/framework.7f03344f.js";const D=JSON.parse('{"title":"多版本 Node.js","description":"","frontmatter":{"title":"多版本 Node.js","date":"2016-11-03T17:06:19.000Z","tags":"Node.js","desc":"Windows下安装多版本的Node.js","toc":true,"categories":["Node.js"]},"headers":[],"relativePath":"practice/nvm-windows.md","filePath":"practice/nvm-windows.md","lastUpdated":null}'),r={name:"practice/nvm-windows.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),d=p(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>最近，Node.js 的 LTS 版本已经升级到 6.9.1 了，最新的版本都已经出到 7.0 了。</p><p>然而我还在使用 5.x 版本，于是我将本地开发的 Node.js 升级到 6.9.1。</p><p>于是，悲剧发生了，以前的项目在新版本的 Node.js 下运行不了。</p><p>所以我发现，拥有多版本的 Node.js 还是很有必要的。</p><h2 id="开发环境" tabindex="-1">开发环境 <a class="header-anchor" href="#开发环境" aria-label="Permalink to &quot;开发环境&quot;">​</a></h2><h3 id="linux-macos" tabindex="-1">linux / MacOs <a class="header-anchor" href="#linux-macos" aria-label="Permalink to &quot;linux / MacOs&quot;">​</a></h3><p>如果是在 <code>*nux</code> 的开发环境可以直接安装 <code>nvm</code> 即可</p><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><p>需要安装 <a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">nvm-window</a></p><p>在此我着重说一下 <code>nvm-windows</code> 需要注意的地方：</p><ul><li>安装 <code>nvm-windows</code> 之前需把已安装的 Node.js 删除，（比如：如果 <code>“C:\\Program Files\\nodejs”</code> 这个目录存在的话就要删掉，不然 nvm 无法使用）</li><li>需要把 NPM 删掉(e.g. <code>&quot;C:\\Users&lt;user&gt;\\AppData\\Roaming\\npm&quot;</code>)</li><li>对应每 Node.js 版本的全局安装方法都用重新安装，比如：</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nvm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">grunt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#切换版本</span></span>
<span class="line"><span style="color:#FFCB6B;">nvm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7.0</span><span style="color:#C3E88D;">.0</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">grunt</span></span></code></pre></div>`,13);function C(a,m,h,u,y,_){return n(),o("div",null,[s("h1",c,[t(l(a.$frontmatter.title)+" ",1),i]),d])}const w=e(r,[["render",C]]);export{D as __pageData,w as default};
