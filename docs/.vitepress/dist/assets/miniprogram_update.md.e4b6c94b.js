import{_ as n,o as p,c as l,k as s,a as o,t as e,S as t}from"./chunks/framework.c5ba3aa3.js";const r="/update/work-flow.png",c="/update/update-logic.jpg",i="/update/mock-update.jpg",f=JSON.parse('{"title":"小程序的自动更新机制","description":"","frontmatter":{"title":"小程序的自动更新机制","desc":"小程序自动更新机制","tags":["小程序"],"date":"2020-4-27","toc":true,"categories":["小程序"]},"headers":[],"relativePath":"miniprogram/update.md","filePath":"miniprogram/update.md","lastUpdated":1691668833000}'),F={name:"miniprogram/update.md"},y={id:"frontmatter-title",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),A=t('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>小程序的更新机制与它的运行机制有关。</p><p>为了保证用户能尽可能快得打开小程序，只会在后台更新，不会主动等待更新完毕才进入最新版小程序。</p><h2 id="运行机制" tabindex="-1">运行机制 <a class="header-anchor" href="#运行机制" aria-label="Permalink to &quot;运行机制&quot;">​</a></h2><p>首先，先看下小程序的运行机制：</p><p><img src="'+r+`" alt=""></p><p>与APP的概念有些类似，初次打开即为冷启动，若启动之后，在被系统回收之前再次打开，则称之为热启动。</p><h2 id="更新机制" tabindex="-1">更新机制 <a class="header-anchor" href="#更新机制" aria-label="Permalink to &quot;更新机制&quot;">​</a></h2><p>小程序的更新机制分为：</p><ul><li>未启动时更新</li><li>启动时更新</li></ul><p><strong>未启动时更新</strong>：意味着微信客户端会在用户不在访问小程序期间，主动触发更新，最慢24小时内覆盖所有用户。如果用户在未覆盖期间进入小程序，则触发了启动时更新。</p><p><strong>启动时更新</strong>：用户冷启动进入小程序时，均会检测小程序是否有更新版本，若有则后台默默更新，准备为下次冷启动时使用。需要注意的是，此时访问的仍是旧版本的小程序。如果此时想手动使用新版小程序，则可以使用官方API：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> updateManager </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getUpdateManager</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">updateManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onCheckForUpdate</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 请求完新版本信息的回调</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hasUpdate</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">updateManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onUpdateReady</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">showModal</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">更新提示</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    content</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">新版本已经准备好，是否重启应用？</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    success</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">confirm</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 新的版本已经下载好，调用 applyUpdate 应用新版本并重启</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">updateManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">applyUpdate</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">updateManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onUpdateFailed</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 新版本下载失败</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><blockquote><p>如若用户是第一次打开小程序（即新用户），则会直接打开最新版本的小程序。此时不需要考虑更新机制。</p></blockquote><p>根据微信提供的能力，小程序的更新流程大致如下：</p><p><img src="`+c+'" alt=""></p><p>由于官方API没有提供主动下载新版本小程序的能力，仅提供了检测的能力。因此，当新版本下载失败时，没法主动触发重试，只能让用户继续访问旧版本的小程序。</p><p>下载失败之后，小程序的重试机制不得而知。可能需要等待小程序被销毁之后，再次冷启动时才会再次主动更新；又或者等待24小时之后。</p><p>由于可能存在下载新版本失败的用户，因此小程序的后端服务需要考虑向后兼容。另外，可以在下载失败的回调函数里加入数据统计，用于计算更新失败的概率。</p><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>更新机制的测试工作比较麻烦，因为可能要上生产环境测试，风险极大。</p><p>笔者尝试在体验版上做测试：先打开<code>v0.0.1</code>版本的小程序，然后在开发者工具上传新的版本，再通过最近访问的列表里再次打开小程序，结果发现直接打开的就是<code>v0.0.2</code>，根本没有还原小程序的更新机制。</p><p>因此可以得出结论：<strong>体验版无法测试更新机制</strong>。</p><h3 id="模拟更新" tabindex="-1">模拟更新 <a class="header-anchor" href="#模拟更新" aria-label="Permalink to &quot;模拟更新&quot;">​</a></h3><p>另外，开发者工具的编译模式提供模拟更新：</p><p><img src="'+i+'" alt=""></p><h2 id="兼容处理" tabindex="-1">兼容处理 <a class="header-anchor" href="#兼容处理" aria-label="Permalink to &quot;兼容处理&quot;">​</a></h2><p>由于存在用户访问旧版小程序的可能，因此与后端的接口设计需要特别关注，尤其是在更新接口时，如果没有做到向后兼容，则会出现旧前端访问新后端的现象，从而产生不可预期的后果。</p><p>最简单的方式：每次升级接口时，均采用新接口。</p>',29);function d(a,C,h,u,m,_){return p(),l("div",null,[s("h1",y,[o(e(a.$frontmatter.title)+" ",1),D]),A])}const b=n(F,[["render",d]]);export{f as __pageData,b as default};
