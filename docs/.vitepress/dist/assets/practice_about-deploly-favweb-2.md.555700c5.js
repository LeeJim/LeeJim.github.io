import{_ as n,o as e,c as l,k as a,a as o,t as p,S as t}from"./chunks/framework.7f03344f.js";const m=JSON.parse('{"title":"从零开始，部署一个Web应用（二）MongoDB & nginx","description":"","frontmatter":{"title":"从零开始，部署一个Web应用（二）MongoDB & nginx","date":"2017-10-21T21:37:14.000Z","tags":"vue.js","desc":"for beginner, how to build an web application","toc":true,"categories":["工程实践"]},"headers":[],"relativePath":"practice/about-deploly-favweb-2.md","filePath":"practice/about-deploly-favweb-2.md","lastUpdated":null}'),c={name:"practice/about-deploly-favweb-2.md"},i={id:"frontmatter-title",tabindex:"-1"},r=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),d=t(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>这篇文章，就总结一些部署<code>MongoDB</code>和<code>nginx</code>遇到的问题。</p><h2 id="mongodb" tabindex="-1">MongoDB <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB&quot;">​</a></h2><p>安装的是社区版本(<a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="noreferrer">MongoDB Community Edition</a>)。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>先创建Mongodb在yum的配置文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[mongodb-org-3.4]</span></span>
<span class="line"><span style="color:#A6ACCD;">name=MongoDB Repository</span></span>
<span class="line"><span style="color:#A6ACCD;">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/</span></span>
<span class="line"><span style="color:#A6ACCD;">gpgcheck=1</span></span>
<span class="line"><span style="color:#A6ACCD;">enabled=1</span></span>
<span class="line"><span style="color:#A6ACCD;">gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc</span></span></code></pre></div><blockquote><p>可动态改变版本号</p></blockquote><p>然后使用<code>yum</code>安装：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo yum install -y mongodb-org</span></span></code></pre></div><h2 id="安全相关" tabindex="-1">安全相关 <a class="header-anchor" href="#安全相关" aria-label="Permalink to &quot;安全相关&quot;">​</a></h2><p>如果是仅仅是本地开发，完全可以忽略这一步。但是如果要放到线上，就一定要增加安全验证。</p><p>在MongoDB中，常用的是增加<a href="https://docs.mongodb.com/manual/tutorial/enable-authentication/" target="_blank" rel="noreferrer">用户访问限制</a>。</p><h3 id="高级管理员" tabindex="-1">高级管理员 <a class="header-anchor" href="#高级管理员" aria-label="Permalink to &quot;高级管理员&quot;">​</a></h3><p>第一步，是先创建一个高级管理员。这个高级管理员可<strong>管理其他用户</strong>：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; use admin</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; db.createUser(</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span></span>
<span class="line"><span style="color:#A6ACCD;">    user: &quot;myUserAdmin&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    pwd: &quot;abc123&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    roles: [ { role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; } ]</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><blockquote><p>注意，admin用户是无法访问其他数据库的，访问其他数据库需要增加新用户。</p></blockquote><p>可以这样以该角色进入MongoDB的命令行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mongo --port 27017 -u &quot;myUserAdmin&quot; -p &quot;abc123&quot; --authenticationDatabase &quot;admin&quot;</span></span></code></pre></div><h3 id="增加其他用户" tabindex="-1">增加其他用户 <a class="header-anchor" href="#增加其他用户" aria-label="Permalink to &quot;增加其他用户&quot;">​</a></h3><p>MongoDB的用户权限是和数据库绑定的，故创建用户前需进入一个指定数据库，比如进入<code>test</code>数据库：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use test</span></span></code></pre></div><p>然后创建角色时，设置账户，密码以及对应的数据库权限，比如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">db.createUser(</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span></span>
<span class="line"><span style="color:#A6ACCD;">    user: &quot;testAdmin&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    pwd: &quot;abc123&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    roles: [ { role: &quot;readWrite&quot;, db: &quot;test&quot; },</span></span>
<span class="line"><span style="color:#A6ACCD;">             { role: &quot;read&quot;, db: &quot;reporting&quot; } ]</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h2><p>安装nginx之前，需要先将nginx的依赖安装完：</p><ul><li>gcc 安装：<code>yum install gcc-c++</code></li><li>PCRE pcre-devel 安装：<code>yum install -y pcre pcre-devel</code></li><li>zlib 安装: <code>yum install -y zlib zlib-devel</code></li><li>OpenSSL 安装: <code>yum install -y openssl openssl-devel</code></li></ul><h2 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 下载Nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">wget -c https://nginx.org/download/nginx-1.10.1.tar.gz</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 解压：</span></span>
<span class="line"><span style="color:#A6ACCD;">tar -zxvf nginx-1.10.1.tar.gz</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 进入nginx解压目录</span></span>
<span class="line"><span style="color:#A6ACCD;">cd nginx-1.10.1 </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 配置：</span></span>
<span class="line"><span style="color:#A6ACCD;">./configure</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 编译安装:</span></span>
<span class="line"><span style="color:#A6ACCD;">make</span></span>
<span class="line"><span style="color:#A6ACCD;">make install</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 查找安装路径：</span></span>
<span class="line"><span style="color:#A6ACCD;">whereis nginx</span></span></code></pre></div><h2 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h2><p>因为是二进制安装，所以环境变量需要手动设置，即此时不能直接使用<code>nginx</code>命令。</p><p>设置环境变量的方法是：将nginx的二进制文件复制的系统bin目录下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cp /usr/local/nginx/sbin/nginx /usr/local/bin</span></span></code></pre></div><blockquote><p>假设上面的whereis nginx返回的是/usr/local/nginx</p></blockquote><h2 id="开启ssl模块" tabindex="-1">开启SSL模块 <a class="header-anchor" href="#开启ssl模块" aria-label="Permalink to &quot;开启SSL模块&quot;">​</a></h2><p>切换到安装的源码包，我是安装在<code>/usr/local/src/nginx-1.11.3</code>。</p><p>修改配置：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./configure --prefix=/usr/local/nginx --with-http_ssl_modul</span></span></code></pre></div><p>执行<code>make</code>之后，切记<strong>不要执行</strong><code>make install</code>，否则就覆盖安装了。</p><p>先备份已安装好的nginx:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak</span></span></code></pre></div><p>然后关闭已启动的nginx：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 查看进程号</span></span>
<span class="line"><span style="color:#A6ACCD;">ps -ef|grep nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">kill -QUIT [进程号]</span></span></code></pre></div><p>将刚刚编译好的nginx覆盖掉原有的nginx:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cp ./objs/nginx /usr/local/nginx/sbin/</span></span></code></pre></div><p>启动nginx，仍可以通过命令查看是否已经加入成功</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/usr/local/nginx/sbin/nginx -V</span></span></code></pre></div>`,47);function g(s,u,C,h,A,b){return e(),l("div",null,[a("h1",i,[o(p(s.$frontmatter.title)+" ",1),r]),d])}const D=n(c,[["render",g]]);export{m as __pageData,D as default};
