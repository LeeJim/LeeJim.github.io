import{_ as n,o,c as l,k as s,a as e,t as p,S as t}from"./chunks/framework.7f03344f.js";const r="/subscribe/request-subscribe-message.jpg",c="/subscribe/WechatIMG198.jpg",i="/subscribe/WechatIMG199.jpg",f=JSON.parse('{"title":"关于订阅消息的思考","description":"","frontmatter":{"title":"关于订阅消息的思考","tags":["小程序"],"desc":"小程序订阅消息的思考","toc":true,"categories":["小程序"],"date":"2020-5-16"},"headers":[],"relativePath":"miniprogram/subscription.md","filePath":"miniprogram/subscription.md","lastUpdated":null}'),F={name:"miniprogram/subscription.md"},D={id:"frontmatter-title",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),d=t('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>小程序的早期定位是“即用即走”或者说是“用完即走”。 但小程序的运营者却不是这么想的，希望用户尽可能的停留在小程序上，或者“多回来看看”，俗称“拉回流”。 让用户回流的关键手段就是 <strong>订阅消息</strong>，通过点击订阅消息，可直接回到小程序。</p><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>早期小程序提供的是 <strong>模板消息</strong>，用户每次点击或者完成支付，都会生成一个<code>formId</code>或者<code>paypay_id</code>，开发者可以通过这个<code>formId</code>给用户发送一次模板消息。</p><p>因此，开发者的常规做法：尽可能地在每个按钮上都封装<code>form</code>，用以收集<code>formId</code>；收集的<code>formId</code>并不会使用，而是将它们存到数据库里，在需要拉回流的时候，通过这些<code>formId</code>发送模板消息。</p><p>这样会存在几个问题：</p><ul><li>用户会被莫名的骚扰（因为<code>formId</code>有7天的有效期）</li><li>用户收到的模板消息是无预期的（因为<code>formId</code>可以发任意的模板消息）</li><li>开发者在每个页面每个可点击区域都封装了<code>form</code>，导致代码混乱</li></ul><p>为了解决以上问题，小程序团队就采用了 <strong>订阅消息</strong> 来替换 <strong>模板消息</strong>。</p><blockquote><p>小程序模板消息接口于2020年1月10日下线</p></blockquote><h2 id="订阅消息的优势" tabindex="-1">订阅消息的优势 <a class="header-anchor" href="#订阅消息的优势" aria-label="Permalink to &quot;订阅消息的优势&quot;">​</a></h2><p><strong>订阅消息</strong> 与 <strong>模板消息</strong> 相比较，明显的优势：用户对自己将收到的模板消息类型有一定的预期，如：</p><p><img src="'+r+`" alt=""></p><p>另外，<strong>对订阅消息的发送时限不做限制</strong>，即可以在任意时间给用户发送一条模板消息，而不像以前的<code>formId</code>有7天的有效期。</p><p>从开发者的角度看：订阅消息是使用接口调用(<a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html" target="_blank" rel="noreferrer">wx.requestSubscribeMessage</a>)，不再是以前那样，一定要用<code>Button</code>。<strong>对于代码维护和开发效率来说，都是利好的</strong>。</p><p>从代码维护上讲，开发者不用再层层嵌套<code>form</code>了，简化了许多代码；另外，以前模板消息是通过<code>Button</code>封装的，拜托了这层束缚之后，就不用再重置<code>Button</code>的样式了，对于开发效率也是有一定的帮助。</p><h3 id="模板消息" tabindex="-1">模板消息 <a class="header-anchor" href="#模板消息" aria-label="Permalink to &quot;模板消息&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bindsubmit</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">addFormId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">report-submit</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">invite-btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">form-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        邀请好友</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Page</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">addFormId</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">formId</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">detail</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// save formId</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="订阅消息" tabindex="-1">订阅消息 <a class="header-anchor" href="#订阅消息" aria-label="Permalink to &quot;订阅消息&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">invite-btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bindtap</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handleInvite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">邀请好友</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Page</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">handleInvite</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestSubscribeMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            tmplIds</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">] </span><span style="color:#676E95;font-style:italic;">// 订阅的模板ID</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><blockquote><p>但是，订阅消息仍有个小程序通病，有一定的兼容性，需要基础库2.4.4以上才能使用。这也就意味着，2020年1月10日模板消息下线之后，你没法招回停留在基础库2.4.4以下的用户了。</p></blockquote><h2 id="订阅消息的类型" tabindex="-1">订阅消息的类型 <a class="header-anchor" href="#订阅消息的类型" aria-label="Permalink to &quot;订阅消息的类型&quot;">​</a></h2><p>以往的模板消息，每次发送消息需要消耗一个<code>formId</code>，而<code>formId</code>有7天的有效期，因此小程序无法召回7天以前的活跃用户。</p><p>而订阅消息则提供了两种类型：</p><ul><li>一次性订阅</li><li>长期订阅</li></ul><p>其中，一次性订阅与以往的模板消息类似，是一次性的，唯一的差异是订阅消息没有限时；而长期订阅则是召回的利器，用户只要订阅过一次，小程序将获得给该用户发送多次消息的能力。</p><p>不过，目前长期性订阅消息仅向政务民生、医疗、交通、金融、教育等线下公共服务开放。而且个人主体的小程序没有权限申请。</p><h2 id="开发的差异" tabindex="-1">开发的差异 <a class="header-anchor" href="#开发的差异" aria-label="Permalink to &quot;开发的差异&quot;">​</a></h2><h3 id="小程序端" tabindex="-1">小程序端 <a class="header-anchor" href="#小程序端" aria-label="Permalink to &quot;小程序端&quot;">​</a></h3><p>以往的模板消息方式，需要前端将每次收集到的<code>formId</code>，上传至后端保存起来。现在，需要做的是，记录一下哪个用户订阅了哪些模板即可，至于订阅的次数，也是需要开发者自行保存的。</p><p>另外每次发起消息订阅，都会有弹窗出现：</p><p><img src="`+c+'" alt=""></p><p>用户可以勾选“总是保持以上选择，不再询问”，这样下次点击时，就直接授权订阅。</p><p>若此后希望小程序重新出现弹框，则是没有办法的。只能在设置页里取消单个订阅消息，或者关闭接收所有订阅消息：</p><p><img src="'+i+`" alt=""></p><p>其实就等于将这些设置转移到更深的路径上，但还是保留了用户取消订阅的权利。</p><p>如果用户关闭接收所有订阅消息，那么调用<code>wx.requestSubscribeMessage</code>时，会触发<code>fail</code>，并返回如下信息：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">errCode</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20004</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">errMsg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">The main switch is switched off</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 用户关闭了主开关，无法进行订阅</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>订阅消息是模板消息的进阶产品，对于用户、开发者更友好，但对于小程序的运营者来说，反而并没有更大的帮助。毕竟以往<code>formId</code>的方式，可以用来发送任意模板消息，现在只能“特定订阅特定使用”。</p><p>因此，更多的小程序运营者会讲小程序的用户引导到公众号，这样才能更大可能地接触到用户，毕竟公众号的消息推送更不受限制。</p>`,42);function h(a,u,m,C,b,g){return o(),l("div",null,[s("h1",D,[e(p(a.$frontmatter.title)+" ",1),y]),d])}const q=n(F,[["render",h]]);export{f as __pageData,q as default};
